name: Lighthouse - deploy

on:
  pull_request:
    branches:
      - master
      - staging
      - dev
    types:
      - opened
      - edited
      - synchronize

env:
  NETLIFY_PAGE_ID: ${{ secrets.NETLIFY_PAGE_ID }}

jobs:
  lighthouse-check-deploy:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@master

      - name: Get pages from the PR comment
        id: pages
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const prefix = "https://${{ env.NETLIFY_PAGE_ID }}.netlify.app"

            let body = JSON.stringify(${{ toJson(github.event.pull_request.body) }})
            let id_start = body.lastIndexOf("[START]") + 11 //[START]\r\n
            let id_end = body.lastIndexOf("[END]") - 4 //\r\n

            return body
              .substring(id_start, id_end)
              .replace(/\\r/g, "")
              .split('\\n')
              .map(page => prefix + page)
              .join('\n')

      - name: Print pages
        run: |
          echo Pages
          echo ${{ toJson(steps.pages.outputs.result) }}

      - name: Build
        run: |
          npm install
          npm build

      - name: Waiting for 200 from the Netlify Preview
        uses: jakepartusch/wait-for-netlify-action@v1
        id: waitFor200
        with:
          site_name: ${{ env.NETLIFY_PAGE_ID }}

      - name: Audit URLs using Lighthouse
        id: audit
        uses: treosh/lighthouse-ci-action@v3
        with:
          urls: ${{ steps.pages.outputs.result }}
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Print results
        run: |
          echo Results
          echo ${{ toJson(steps.audit.outputs.manifest) }}

      - name: Create comment markdown
        id: comment
        uses: actions/github-script@v3
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          result-encoding: string
          script: |
            const pages_results = JSON.parse(${{ toJson(steps.audit.outputs.manifest) }})
            const page_url = "https://${{ env.NETLIFY_PAGE_ID }}.netlify.app"

            const badges_titles = {
              "accessibility": "Accessibility",
              "best-practices": "Best Practices",
              "performance": "Performance",
              "pwa": "PWA",
              "seo": "SEO",
            }

            const getBadgeColor = score => {
              if (typeof score !== "number") { return "lightgrey" }
              if(score > 90) { return "green" }
              if(score > 50) { return "orange" }
              return "red"
            }

            const getBadge = (title, score) => `![](https://img.shields.io/badge/${title}-${score}-${getBadgeColor(score)}?style=flat-square)`

            const getBadges = summary => Object.keys(summary).map(key => `${getBadge( badges_titles[key].replace(/ /g, '%20'), summary[key] * 100)}`).join('&nbsp;')

            const slug = url => url.replace(page_url, '')

            return `## [DEPLOY](${page_url})\n` + pages_results.map(({ url, summary }) => `#### [${slug(url)}](${url})\n${getBadges(summary)}`).join('\n')

      - name: Comment results
        uses: unsplash/comment-on-pr@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          msg: ${{ steps.comment.outputs.result }}